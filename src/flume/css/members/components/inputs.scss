$ef-color: $base-color-alpha;

@import "../effects.scss";
@import "../grid.scss";

input[type=text],
input[type=password], 
input[type=email], 
input[type=login], 
input[type=number] {
    width: 100%;
    height: 40px;
    padding: 0 15px;

    background: transparent;
    border: 2px solid $base-color-alpha;
    border-radius: 1em;
    color: #303030 !important;
    @extend %ff;
    &:not(:focus) {
        @extend .outline;
    }
    
    transition: .2s;
    
    &.concentration {
        &:not(:focus) {
            animation: text-input-concentration 2s infinite;
        }
    }
    &:focus {
        border: 2px solid transparent;
        background: $base-color-alpha;
    }
    &:disabled {
        border: 2px solid $grey;
    }

}
@keyframes text-input-concentration {
    0%, 100%, 40% {
        transform: rotate(0);
    }
    10% {
        transform: rotate(-2deg);
    }
    20% {
        transform: rotate(2deg);
    }
    30% {
        transform: rotate(-2deg);
    }
}

%super-input {
    &.concentration input:not(:checked) ~ .inner {
        animation: super-input-concentration 2s infinite;
    }

    input {
        display: none;
        
        &:checked {

            &:disabled {

                &~ .inner::after {
                    background: $grey;
                }
                
            }

            &~ .inner::after {
                border: 2px solid transparent;
                background: $base-color-alpha;
            }

        }
        &:disabled:not(:checked) ~ .inner::after {
            border: 2px solid $grey;
        }
        &:not(:disabled) ~ .inner::after {
            @extend .outline;
        }

    }

    label .inner {
        width: 34px;
        height: 34px;

        @extend %items-to-center;

        &::after {
            content: "";

            width: 30px;
            height: 30px;

            position: absolute;
            left: 0;
            top: 0;

            background: transparent;
            border: 2px solid $base-color-alpha;
            border-radius: .8em;

            transition: .2s;
        }

    }

}
// Checkbox
.checkbox-input {
    width: 34px;
    height: 34px;

    @extend %super-input;

    input[type=checkbox] {
        
        &:checked {

            &:disabled ~ .inner .checkmark-icon {
                color: #aaa !important;
            }
            
            &~ .inner .checkmark-icon {
                opacity: 1;
                transform: translate(-50%, -50%) scale(1);
                color: $base-color;
            }

        }
        &:not(:disabled) ~ .inner {
            cursor: pointer;
        }

    }

    label .inner .checkmark-icon {
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, calc(-50% + 5px)) scale(.8);

        opacity: 0;

        transition: .2s cubic-bezier(0.25, 0.1, 0.29, 1.84);
    }
    
}
// Radio
.radio-input {
    width: 34px;
    height: 34px;

    @extend %super-input;

    input[type=radio] {
        
        &:checked {
            &:disabled ~ .inner::before {
                background: #aaa !important;
            }
            
            &~ .inner::before {
                opacity: 1;
                transform: translate(-50%, -50%) scale(1);
            }
        }
        &:not(:disabled) ~ .inner {
            cursor: pointer;
        }

    }

    label .inner {
        width: 34px;
        height: 34px;
        
        &::after {
            border-radius: 50%;
        }
        &::before {
            content: "";
            
            width: 15px;
            height: 15px;

            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%) scale(.8);
            
            border-radius: 50%;
            opacity: 0;
            background: $base-color;
            
            transition: .2s cubic-bezier(0.25, 0.1, 0.29, 1.84);
        }

    }
    
}
@keyframes super-input-concentration {
    0%, 100%, 40% {
        transform: translateY(0);
    }
    10% {
        transform: translateY(-2px);
    }
    20% {
        transform: translateY(0);
    }
    30% {
        transform: translateY(-2px);
    }
}